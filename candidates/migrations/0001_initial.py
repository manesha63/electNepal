# Generated by Django 4.2.7 on 2025-09-12 23:50

import candidates.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name as it appears on official documents', max_length=200)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=candidates.models.candidate_photo_path)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('bio_en', models.TextField(help_text='Biography in English')),
                ('bio_ne', models.TextField(blank=True, help_text='Biography in Nepali (optional)')),
                ('education_en', models.TextField(blank=True)),
                ('education_ne', models.TextField(blank=True)),
                ('experience_en', models.TextField(blank=True)),
                ('experience_ne', models.TextField(blank=True)),
                ('manifesto_en', models.TextField(blank=True)),
                ('manifesto_ne', models.TextField(blank=True)),
                ('position_level', models.CharField(choices=[('ward', 'Ward Representative'), ('local_executive', 'Local Executive (Mayor/Chairperson)'), ('provincial', 'Provincial Assembly'), ('federal', 'Federal Parliament')], max_length=20)),
                ('ward_number', models.IntegerField(blank=True, help_text='Ward number (1-35, required for ward-level positions)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(35)])),
                ('constituency_code', models.CharField(blank=True, max_length=50)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Verification Rejected')], default='pending', max_length=20)),
                ('verification_document', models.FileField(blank=True, upload_to=candidates.models.verification_doc_path)),
                ('verification_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('website', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('donation_link', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.district')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.municipality')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.province')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_candidates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CandidatePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='candidates.candidate')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['candidate', '-created_at'], name='candidates__candida_3719a0_idx'), models.Index(fields=['is_published', '-created_at'], name='candidates__is_publ_37cc81_idx')],
            },
        ),
        migrations.CreateModel(
            name='CandidateEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_date', models.DateTimeField()),
                ('location', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='candidates.candidate')),
            ],
            options={
                'ordering': ['event_date'],
                'indexes': [models.Index(fields=['candidate', 'event_date'], name='candidates__candida_ada519_idx'), models.Index(fields=['is_published', 'event_date'], name='candidates__is_publ_6898f7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['verification_status'], name='candidates__verific_118207_idx'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['position_level', 'district'], name='candidates__positio_c10639_idx'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['province', 'district', 'municipality'], name='candidates__provinc_76bc37_idx'),
        ),
        migrations.AddIndex(
            model_name='candidate',
            index=models.Index(fields=['full_name'], name='candidates__full_na_67928d_idx'),
        ),
    ]
