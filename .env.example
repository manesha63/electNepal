# Django Settings
SECRET_KEY=your-secret-key-here-generate-new-one
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Machine Translation Settings
MT_ENGINE=google

# Database Configuration
DATABASE_URL=postgresql://your_db_user:your_db_password@localhost:5432/your_db_name
DB_NAME=electnepal
DB_USER=your_db_user
DB_PASSWORD=your_db_password
DB_HOST=localhost
DB_PORT=5432

# Email Settings (AWS SES Configuration)
# Switch between console (development) and SMTP (production)
# For development, use: django.core.mail.backends.console.EmailBackend
# For production with AWS SES, use: django.core.mail.backends.smtp.EmailBackend
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# AWS SES SMTP Settings (US East N. Virginia)
# Uncomment and configure these when you have AWS SES credentials
EMAIL_HOST=email-smtp.us-east-1.amazonaws.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=YOUR_AWS_SES_SMTP_USERNAME
EMAIL_HOST_PASSWORD=YOUR_AWS_SES_SMTP_PASSWORD
DEFAULT_FROM_EMAIL=your-email@gmail.com
SERVER_EMAIL=your-email@gmail.com

# Instructions for AWS SES Setup:
# 1. Create AWS account and verify your email in SES Console
# 2. Go to SES Console → SMTP Settings → Create SMTP Credentials
# 3. Copy the SMTP Username and Password to EMAIL_HOST_USER and EMAIL_HOST_PASSWORD
# 4. Update DEFAULT_FROM_EMAIL and SERVER_EMAIL with your verified email
# 5. Change EMAIL_BACKEND to django.core.mail.backends.smtp.EmailBackend
# 6. For production access, request it in SES Console (sandbox mode limits to verified emails only)

# Security Settings (for production deployment)
# Uncomment these when deploying to production with HTTPS
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
